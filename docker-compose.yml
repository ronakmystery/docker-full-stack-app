services:
  mariadb:
    image: mariadb:latest
    container_name: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: mydb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - ./db-init:/docker-entrypoint-initdb.d
      - mariadb-data:/var/lib/mysql
    networks: 
      - x_network

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    restart: always
    environment:
      PMA_HOST: mariadb
      PMA_USER: root
      PMA_PASSWORD: rootpassword
    ports:
      - "8080:80"
    depends_on:
      - mariadb
    networks:
      - x_network

  node-server:
    build: ./node-server
    container_name: node-server
    restart: always
    expose:
      - "5000"
    volumes:
      - ./node-server:/app
      - /app/node_modules/ 
      - ./mkcerts:/app/mkcerts
    environment:
      NODE_ENV: development
      DB_HOST: mariadb
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: mydb
    depends_on:
      - mariadb
    networks:
      - x_network

  flask-server:
    build: ./flask-server
    container_name: flask-server
    restart: always
    ports:
      - "5002:5002"
    volumes:
      - ./flask-server:/app
    environment:
      FLASK_ENV: development
      DB_HOST: mariadb
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: mydb
    depends_on:
      - node-server
    networks:
      - x_network

  frontend:
    build: ./frontend
    expose:
      - "5173"
    volumes:
      - ./frontend:/app 
      - /app/node_modules 
      - ./mkcerts:/app/mkcerts
    command: ["npm", "run", "dev"]  
    depends_on:
      - node-server
    networks:
      - x_network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./mkcerts:/etc/nginx/ssl
    depends_on:
      - frontend
      - node-server
    networks:
      - x_network

networks:
  x_network:
    name: x_network 
    driver: bridge

volumes:
  mariadb-data:
  


